import type { Chat, Message } from "@/types/chat"

export const mockChats: Chat[] = [
  {
    id: "1",
    name: "GPT Assistant",
    isOnline: true,
    isAI: true,
    lastMessage: "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
    lastMessageTime: new Date(Date.now() - 1000 * 60 * 5),
    unreadCount: 0,
  },
  {
    id: "2",
    name: "Claude AI",
    isOnline: true,
    isAI: true,
    lastMessage: "–ì–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é!",
    lastMessageTime: new Date(Date.now() - 1000 * 60 * 15),
    unreadCount: 1,
  },
  {
    id: "3",
    name: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
    isOnline: true,
    isAI: false,
    lastMessage: "–£–≤–∏–¥–∏–º—Å—è –∑–∞–≤—Ç—Ä–∞!",
    lastMessageTime: new Date(Date.now() - 1000 * 60 * 30),
    unreadCount: 2,
  },
  {
    id: "4",
    name: "–ò–≤–∞–Ω –°–∏–¥–æ—Ä–æ–≤",
    isOnline: false,
    isAI: false,
    lastMessage: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å",
    lastMessageTime: new Date(Date.now() - 1000 * 60 * 60 * 2),
    unreadCount: 0,
  },
  {
    id: "5",
    name: "Coding Assistant",
    isOnline: true,
    isAI: true,
    lastMessage: "–ü–æ–º–æ–≥—É —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
    lastMessageTime: new Date(Date.now() - 1000 * 60 * 60 * 3),
    unreadCount: 0,
  },
]

export const mockMessages: Record<string, Message[]> = {
  "1": [
    {
      id: "1",
      content: "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
      sender: "user",
      timestamp: new Date(Date.now() - 1000 * 60 * 10),
      status: "read",
    },
    {
      id: "2",
      content:
        "–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å. –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏. –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?",
      sender: "ai",
      timestamp: new Date(Date.now() - 1000 * 60 * 9),
      status: "delivered",
    },
    {
      id: "3",
      content: "–ú–æ–∂–µ—à—å –ø–æ–º–æ—á—å —Å –∏–∑—É—á–µ–Ω–∏–µ–º React?",
      sender: "user",
      timestamp: new Date(Date.now() - 1000 * 60 * 8),
      status: "read",
    },
    {
      id: "4",
      content:
        "–ö–æ–Ω–µ—á–Ω–æ! React - —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤. –° —á–µ–≥–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –Ω–∞—á–∞—Ç—å? –ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ–± –æ—Å–Ω–æ–≤–∞—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, —Ö—É–∫–∞—Ö –∏–ª–∏ —á–µ–º-—Ç–æ –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–º.",
      sender: "ai",
      timestamp: new Date(Date.now() - 1000 * 60 * 7),
      status: "delivered",
    },
  ],
  "2": [
    {
      id: "5",
      content: "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ",
      sender: "user",
      timestamp: new Date(Date.now() - 1000 * 60 * 20),
      status: "read",
    },
    {
      id: "6",
      content:
        "–Ø Claude - –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π Anthropic. –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏: –æ—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –¥–æ —Ä–µ—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º. –ì–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é!",
      sender: "ai",
      timestamp: new Date(Date.now() - 1000 * 60 * 19),
      status: "delivered",
    },
  ],
  "3": [
    {
      id: "7",
      content: "–ü—Ä–∏–≤–µ—Ç, –ê–Ω–Ω–∞! –ö–∞–∫ –ø—Ä–æ—à–ª–∞ –≤—Å—Ç—Ä–µ—á–∞?",
      sender: "user",
      timestamp: new Date(Date.now() - 1000 * 60 * 45),
      status: "read",
    },
    {
      id: "8",
      content: "–ü—Ä–∏–≤–µ—Ç! –í—Å—Ç—Ä–µ—á–∞ –ø—Ä–æ—à–ª–∞ –æ—Ç–ª–∏—á–Ω–æ, –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã —Ä–µ—à–∏–ª–∏. –ó–∞–≤—Ç—Ä–∞ —É–≤–∏–¥–∏–º—Å—è –≤ –æ—Ñ–∏—Å–µ?",
      sender: "other",
      timestamp: new Date(Date.now() - 1000 * 60 * 40),
      status: "delivered",
    },
    {
      id: "9",
      content: "–î–∞, –∫–æ–Ω–µ—á–Ω–æ! –î–æ –≤—Å—Ç—Ä–µ—á–∏ –∑–∞–≤—Ç—Ä–∞",
      sender: "user",
      timestamp: new Date(Date.now() - 1000 * 60 * 35),
      status: "read",
    },
    {
      id: "10",
      content: "–£–≤–∏–¥–∏–º—Å—è –∑–∞–≤—Ç—Ä–∞! üëã",
      sender: "other",
      timestamp: new Date(Date.now() - 1000 * 60 * 30),
      status: "delivered",
    },
  ],
  "4": [
    {
      id: "11",
      content: "–ò–≤–∞–Ω, –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å —Å –ø—Ä–æ–µ–∫—Ç–æ–º?",
      sender: "user",
      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3),
      status: "read",
    },
    {
      id: "12",
      content: "–ö–æ–Ω–µ—á–Ω–æ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?",
      sender: "other",
      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2.5),
      status: "delivered",
    },
    {
      id: "13",
      content: "–ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –Ω–∞ –æ—à–∏–±–∫–∏",
      sender: "user",
      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2.3),
      status: "read",
    },
    {
      id: "14",
      content: "–û—Ç–ø—Ä–∞–≤–ª—è–π, –ø–æ—Å–º–æ—Ç—Ä—é —Å–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º",
      sender: "other",
      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2.1),
      status: "delivered",
    },
    {
      id: "15",
      content: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å! üôè",
      sender: "user",
      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2),
      status: "read",
    },
  ],
  "5": [
    {
      id: "16",
      content: "–ü–æ–º–æ–≥–∏ —Å TypeScript",
      sender: "user",
      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 4),
      status: "read",
    },
    {
      id: "17",
      content:
        "–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É —Å TypeScript! –≠—Ç–æ –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –° –∫–∞–∫–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–µ–π –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –¢–∏–ø–∏–∑–∞—Ü–∏—è, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –¥–∂–µ–Ω–µ—Ä–∏–∫–∏ –∏–ª–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ?",
      sender: "ai",
      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3.5),
      status: "delivered",
    },
  ],
}
